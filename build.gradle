buildscript {
    repositories {
        jcenter()
        maven {url "http://files.minecraftforge.net/maven"}
        maven {url "https://plugins.gradle.org/m2/"}
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
        classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.0.8"
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7"
    }
}
apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: "com.matthewprenger.cursegradle"
apply plugin: "com.jfrog.bintray"
apply plugin: "maven-publish"

String ttag = System.getenv("TRAVIS_TAG")
version = ttag ? ttag : "0.0.0-x"
group = "szewek.fl"
archivesBaseName = "fl"

sourceCompatibility = targetCompatibility = "1.8"
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

task sourcesJar(type: Jar, dependsOn: "sourceJar") {
    from (sourceSets.main.allJava) {
		include "szewek/fl/R.java"
		expand 'version': project.version
	}
	from (sourceSets.main.allJava) {
		exclude "szewek/fl/R.java"
	}
    from sourceSets.api.allJava
	from sourceSets.main.resources
	classifier = "sources"
}

minecraft {
    version = "1.12-14.21.1.2415"
    runDir = "run"
    mappings = "snapshot_20170624"
    replace '\${version}', project.version
    replaceIn "R.java"
}

publishing {
    publications {
        FLPub(MavenPublication) {
            from components.java
            artifact sourcesJar
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
        }
    }
}

bintray {
    user = System.getenv("BINTRAY_USER")
    key = System.getenv("BINTRAY_KEY")
    publications = ["FLPub"]
    publish = true
    override = false
    pkg {
        repo = "MC"
        name = project.group
        version {
            name = project.version
        }
    }
}

repositories {
	maven {url "http://dvs1.progwml6.com/files/maven"}
}

dependencies {
    deobfCompile "mezz.jei:jei_1.12:4.7.2.77"
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
curseforge {
    String cfkey = System.getenv("CURSEFORGE_KEY")
    apiKey = cfkey ? cfkey : ""
    project {
        id = "262385"
        releaseType = "release"
        changelogType = "markdown"
        changelog = file("LATEST.md")
    }
}

artifacts {
    archives sourcesJar
}